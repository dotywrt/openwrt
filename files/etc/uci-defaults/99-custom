#!/bin/sh

# === GLOBALS ===
TTL_VAL=64
MODEM_DEV="/dev/cdc-wdm0"
TTY_DEV="/dev/ttyUSB3"
APN="internet"
WAN_IF="wwan0"

# === Disable flow offload ===
uci set firewall.@defaults[0].flow_offloading='0'
uci set firewall.@defaults[0].flow_offloading_hw='0'

# === Disable WAN6 ===
uci -q delete network.wan6

# === Quectel WAN Config ===
uci set network.wan='interface'
uci set network.wan.proto='quectel'
uci set network.wan.device="$MODEM_DEV"
uci set network.wan.apn="$APN"
uci set network.wan.auth='none'
uci set network.wan.mtu='1500'
uci set network.wan.delay='5'
uci set network.wan.pdptype='ipv4v6'

# === Packet steering ===
uci set network.globals.packet_steering='1'

# === UHTTPD ===
uci set uhttpd.main.rfc1918_filter='0'

# === Dnsmasq logging suppression ===
echo "log-facility=/dev/null" >> /etc/dnsmasq.conf

# === TTL/Hoplimit rules (only postrouting!) ===
mkdir -p /etc/nftables.d
cat << EOF > /etc/nftables.d/ttl_hoplimit.nft
chain mangle_postrouting_ttl {
  type filter hook postrouting priority 300; policy accept;
  ip ttl set $TTL_VAL
}
chain mangle_postrouting_hoplimit {
  type filter hook postrouting priority 300; policy accept;
  oifname "$WAN_IF" ip6 hoplimit set $TTL_VAL
}
EOF

# === Sysctl tuning ===
uci -q batch <<EOF
delete system.@sysctl[0]
add system sysctl
set system.@sysctl[-1].option='net.core.rmem_max'
set system.@sysctl[-1].value='26214400'

add system sysctl
set system.@sysctl[-1].option='net.core.wmem_max'
set system.@sysctl[-1].value='26214400'

add system sysctl
set system.@sysctl[-1].option='net.core.netdev_max_backlog'
set system.@sysctl[-1].value='5000'

add system sysctl
set system.@sysctl[-1].option='net.ipv4.tcp_rmem'
set system.@sysctl[-1].value='4096 87380 16777216'

add system sysctl
set system.@sysctl[-1].option='net.ipv4.tcp_wmem'
set system.@sysctl[-1].value='4096 65536 16777216'

add system sysctl
set system.@sysctl[-1].option='net.ipv4.tcp_congestion_control'
set system.@sysctl[-1].value='bbr'

add system sysctl
set system.@sysctl[-1].option='net.core.default_qdisc'
set system.@sysctl[-1].value='fq'

add system sysctl
set system.@sysctl[-1].option='net.ipv4.tcp_low_latency'
set system.@sysctl[-1].value='1'

add system sysctl
set system.@sysctl[-1].option='net.ipv4.tcp_timestamps'
set system.@sysctl[-1].value='1'

add system sysctl
set system.@sysctl[-1].option='net.ipv4.tcp_sack'
set system.@sysctl[-1].value='1'

add system sysctl
set system.@sysctl[-1].option='net.ipv4.tcp_window_scaling'
set system.@sysctl[-1].value='1'

add system sysctl
set system.@sysctl[-1].option='net.ipv4.tcp_tw_reuse'
set system.@sysctl[-1].value='1'
EOF

# === Commit all ===
uci commit network
uci commit firewall
uci commit system
uci commit uhttpd

# === Apply governor ===
for cpu in /sys/devices/system/cpu/cpu[0-9]*; do
  echo performance > "$cpu/cpufreq/scaling_governor" 2>/dev/null
done

# === IRQ tuning (auto balance eth/wan) ===
for irq in $(grep -E 'eth|xgbe|wan' /proc/interrupts | cut -d: -f1 | tr -d ' '); do
  mask=$((2 ** (1 + RANDOM % 3)))  # skip CPU0
  printf "%x" "$mask" > "/proc/irq/$irq/smp_affinity" 2>/dev/null
done

# === Restart services ===
/etc/init.d/sysctl restart
/etc/init.d/firewall restart
/etc/init.d/network restart
/etc/init.d/uhttpd restart

# === Retrigger modem (if exists) ===
[ -e "$TTY_DEV" ] && echo "AT+CFUN=1" > "$TTY_DEV"

exit 0
